// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cx.proto

/*
Package cxpb is a generated protocol buffer package.

It is generated from these files:
	cx.proto

It has these top-level messages:
	CX
	Node
	Edge
	NodeAttribute
	EdgeAttribute
	NetworkAttribute
	CartesianLayout
	NdexStatus
	CyHiddenAttribute
	CyTableColumn
	CySubNetwork
	CyView
	CyVisualProperty
*/
package cxpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CX struct {
	Nodes              []*Node              `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	Edges              []*Edge              `protobuf:"bytes,2,rep,name=edges" json:"edges,omitempty"`
	EdgeAttributes     []*EdgeAttribute     `protobuf:"bytes,3,rep,name=edgeAttributes" json:"edgeAttributes,omitempty"`
	NodeAttributes     []*NodeAttribute     `protobuf:"bytes,4,rep,name=nodeAttributes" json:"nodeAttributes,omitempty"`
	NetworkAttributes  []*NetworkAttribute  `protobuf:"bytes,5,rep,name=networkAttributes" json:"networkAttributes,omitempty"`
	CartesianLayouts   []*CartesianLayout   `protobuf:"bytes,6,rep,name=cartesianLayouts" json:"cartesianLayouts,omitempty"`
	NdexStatus         []*NdexStatus        `protobuf:"bytes,7,rep,name=ndexStatus" json:"ndexStatus,omitempty"`
	CyHiddenAttributes []*CyHiddenAttribute `protobuf:"bytes,8,rep,name=cyHiddenAttributes" json:"cyHiddenAttributes,omitempty"`
	CyViews            []*CyView            `protobuf:"bytes,9,rep,name=cyViews" json:"cyViews,omitempty"`
	CySubNetworks      []*CySubNetwork      `protobuf:"bytes,10,rep,name=cySubNetworks" json:"cySubNetworks,omitempty"`
	CyVisualProperties []*CyVisualProperty  `protobuf:"bytes,11,rep,name=cyVisualProperties" json:"cyVisualProperties,omitempty"`
	CyTablecolumns     []*CyTableColumn     `protobuf:"bytes,12,rep,name=cyTablecolumns" json:"cyTablecolumns,omitempty"`
}

func (m *CX) Reset()                    { *m = CX{} }
func (m *CX) String() string            { return proto.CompactTextString(m) }
func (*CX) ProtoMessage()               {}
func (*CX) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CX) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *CX) GetEdges() []*Edge {
	if m != nil {
		return m.Edges
	}
	return nil
}

func (m *CX) GetEdgeAttributes() []*EdgeAttribute {
	if m != nil {
		return m.EdgeAttributes
	}
	return nil
}

func (m *CX) GetNodeAttributes() []*NodeAttribute {
	if m != nil {
		return m.NodeAttributes
	}
	return nil
}

func (m *CX) GetNetworkAttributes() []*NetworkAttribute {
	if m != nil {
		return m.NetworkAttributes
	}
	return nil
}

func (m *CX) GetCartesianLayouts() []*CartesianLayout {
	if m != nil {
		return m.CartesianLayouts
	}
	return nil
}

func (m *CX) GetNdexStatus() []*NdexStatus {
	if m != nil {
		return m.NdexStatus
	}
	return nil
}

func (m *CX) GetCyHiddenAttributes() []*CyHiddenAttribute {
	if m != nil {
		return m.CyHiddenAttributes
	}
	return nil
}

func (m *CX) GetCyViews() []*CyView {
	if m != nil {
		return m.CyViews
	}
	return nil
}

func (m *CX) GetCySubNetworks() []*CySubNetwork {
	if m != nil {
		return m.CySubNetworks
	}
	return nil
}

func (m *CX) GetCyVisualProperties() []*CyVisualProperty {
	if m != nil {
		return m.CyVisualProperties
	}
	return nil
}

func (m *CX) GetCyTablecolumns() []*CyTableColumn {
	if m != nil {
		return m.CyTablecolumns
	}
	return nil
}

type Node struct {
	Id         int64  `protobuf:"varint,1,opt,name=id,json=@id" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,json=n" json:"name,omitempty"`
	Represents string `protobuf:"bytes,3,opt,name=represents,json=r" json:"represents,omitempty"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Node) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Node) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Node) GetRepresents() string {
	if m != nil {
		return m.Represents
	}
	return ""
}

type Edge struct {
	Id          int64  `protobuf:"varint,1,opt,name=id,json=@id" json:"id,omitempty"`
	SourceId    int64  `protobuf:"varint,2,opt,name=sourceId,json=s" json:"sourceId,omitempty"`
	TargetId    int64  `protobuf:"varint,3,opt,name=targetId,json=t" json:"targetId,omitempty"`
	Interaction string `protobuf:"bytes,4,opt,name=interaction,json=i" json:"interaction,omitempty"`
}

func (m *Edge) Reset()                    { *m = Edge{} }
func (m *Edge) String() string            { return proto.CompactTextString(m) }
func (*Edge) ProtoMessage()               {}
func (*Edge) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Edge) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Edge) GetSourceId() int64 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *Edge) GetTargetId() int64 {
	if m != nil {
		return m.TargetId
	}
	return 0
}

func (m *Edge) GetInteraction() string {
	if m != nil {
		return m.Interaction
	}
	return ""
}

type NodeAttribute struct {
	NodeId   int64  `protobuf:"varint,1,opt,name=nodeId,json=po" json:"nodeId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,json=n" json:"name,omitempty"`
	Value    string `protobuf:"bytes,3,opt,name=value,json=v" json:"value,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=type,json=d" json:"type,omitempty"`
	SubnetId int64  `protobuf:"varint,5,opt,name=subnetId,json=s" json:"subnetId,omitempty"`
}

func (m *NodeAttribute) Reset()                    { *m = NodeAttribute{} }
func (m *NodeAttribute) String() string            { return proto.CompactTextString(m) }
func (*NodeAttribute) ProtoMessage()               {}
func (*NodeAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *NodeAttribute) GetNodeId() int64 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *NodeAttribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NodeAttribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *NodeAttribute) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NodeAttribute) GetSubnetId() int64 {
	if m != nil {
		return m.SubnetId
	}
	return 0
}

type EdgeAttribute struct {
	EdgeId   int64  `protobuf:"varint,1,opt,name=edgeId,json=po" json:"edgeId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,json=n" json:"name,omitempty"`
	Value    string `protobuf:"bytes,3,opt,name=value,json=v" json:"value,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=type,json=d" json:"type,omitempty"`
	SubnetId int64  `protobuf:"varint,5,opt,name=subnetId,json=s" json:"subnetId,omitempty"`
}

func (m *EdgeAttribute) Reset()                    { *m = EdgeAttribute{} }
func (m *EdgeAttribute) String() string            { return proto.CompactTextString(m) }
func (*EdgeAttribute) ProtoMessage()               {}
func (*EdgeAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *EdgeAttribute) GetEdgeId() int64 {
	if m != nil {
		return m.EdgeId
	}
	return 0
}

func (m *EdgeAttribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EdgeAttribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *EdgeAttribute) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EdgeAttribute) GetSubnetId() int64 {
	if m != nil {
		return m.SubnetId
	}
	return 0
}

type NetworkAttribute struct {
	EdgeId   int64  `protobuf:"varint,1,opt,name=edgeId,json=po" json:"edgeId,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,json=n" json:"name,omitempty"`
	Value    string `protobuf:"bytes,3,opt,name=value,json=v" json:"value,omitempty"`
	Type     string `protobuf:"bytes,4,opt,name=type,json=d" json:"type,omitempty"`
	SubnetId int64  `protobuf:"varint,5,opt,name=subnetId,json=s" json:"subnetId,omitempty"`
}

func (m *NetworkAttribute) Reset()                    { *m = NetworkAttribute{} }
func (m *NetworkAttribute) String() string            { return proto.CompactTextString(m) }
func (*NetworkAttribute) ProtoMessage()               {}
func (*NetworkAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *NetworkAttribute) GetEdgeId() int64 {
	if m != nil {
		return m.EdgeId
	}
	return 0
}

func (m *NetworkAttribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkAttribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *NetworkAttribute) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NetworkAttribute) GetSubnetId() int64 {
	if m != nil {
		return m.SubnetId
	}
	return 0
}

type CartesianLayout struct {
	Nodeid int64   `protobuf:"varint,1,opt,name=nodeid" json:"nodeid,omitempty"`
	X      float64 `protobuf:"fixed64,2,opt,name=x" json:"x,omitempty"`
	Y      float64 `protobuf:"fixed64,3,opt,name=y" json:"y,omitempty"`
	Viewid int64   `protobuf:"varint,4,opt,name=viewid" json:"viewid,omitempty"`
}

func (m *CartesianLayout) Reset()                    { *m = CartesianLayout{} }
func (m *CartesianLayout) String() string            { return proto.CompactTextString(m) }
func (*CartesianLayout) ProtoMessage()               {}
func (*CartesianLayout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CartesianLayout) GetNodeid() int64 {
	if m != nil {
		return m.Nodeid
	}
	return 0
}

func (m *CartesianLayout) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *CartesianLayout) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *CartesianLayout) GetViewid() int64 {
	if m != nil {
		return m.Viewid
	}
	return 0
}

type NdexStatus struct {
	ExternalId       string `protobuf:"bytes,1,opt,name=externalId" json:"externalId,omitempty"`
	CreationTime     int64  `protobuf:"varint,2,opt,name=creationTime" json:"creationTime,omitempty"`
	ModificationTime int64  `protobuf:"varint,3,opt,name=modificationTime" json:"modificationTime,omitempty"`
	Visibility       string `protobuf:"bytes,4,opt,name=visibility" json:"visibility,omitempty"`
	Published        bool   `protobuf:"varint,5,opt,name=published" json:"published,omitempty"`
	NodeCount        int64  `protobuf:"varint,6,opt,name=nodeCount" json:"nodeCount,omitempty"`
	EdgeCount        int64  `protobuf:"varint,7,opt,name=edgeCount" json:"edgeCount,omitempty"`
	Owner            string `protobuf:"bytes,8,opt,name=owner" json:"owner,omitempty"`
	NdexServerURI    string `protobuf:"bytes,9,opt,name=ndexServerURI" json:"ndexServerURI,omitempty"`
	ReadOnly         bool   `protobuf:"varint,10,opt,name=readOnly" json:"readOnly,omitempty"`
}

func (m *NdexStatus) Reset()                    { *m = NdexStatus{} }
func (m *NdexStatus) String() string            { return proto.CompactTextString(m) }
func (*NdexStatus) ProtoMessage()               {}
func (*NdexStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *NdexStatus) GetExternalId() string {
	if m != nil {
		return m.ExternalId
	}
	return ""
}

func (m *NdexStatus) GetCreationTime() int64 {
	if m != nil {
		return m.CreationTime
	}
	return 0
}

func (m *NdexStatus) GetModificationTime() int64 {
	if m != nil {
		return m.ModificationTime
	}
	return 0
}

func (m *NdexStatus) GetVisibility() string {
	if m != nil {
		return m.Visibility
	}
	return ""
}

func (m *NdexStatus) GetPublished() bool {
	if m != nil {
		return m.Published
	}
	return false
}

func (m *NdexStatus) GetNodeCount() int64 {
	if m != nil {
		return m.NodeCount
	}
	return 0
}

func (m *NdexStatus) GetEdgeCount() int64 {
	if m != nil {
		return m.EdgeCount
	}
	return 0
}

func (m *NdexStatus) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *NdexStatus) GetNdexServerURI() string {
	if m != nil {
		return m.NdexServerURI
	}
	return ""
}

func (m *NdexStatus) GetReadOnly() bool {
	if m != nil {
		return m.ReadOnly
	}
	return false
}

type CyHiddenAttribute struct {
	Name  string `protobuf:"bytes,1,opt,name=name,json=n" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,json=v" json:"value,omitempty"`
	Type  string `protobuf:"bytes,3,opt,name=type,json=d" json:"type,omitempty"`
}

func (m *CyHiddenAttribute) Reset()                    { *m = CyHiddenAttribute{} }
func (m *CyHiddenAttribute) String() string            { return proto.CompactTextString(m) }
func (*CyHiddenAttribute) ProtoMessage()               {}
func (*CyHiddenAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CyHiddenAttribute) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CyHiddenAttribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *CyHiddenAttribute) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type CyTableColumn struct {
	Name      string `protobuf:"bytes,1,opt,name=name,json=n" json:"name,omitempty"`
	Type      string `protobuf:"bytes,2,opt,name=type,json=d" json:"type,omitempty"`
	AppliesTo string `protobuf:"bytes,3,opt,name=appliesTo,json=applies_to" json:"appliesTo,omitempty"`
}

func (m *CyTableColumn) Reset()                    { *m = CyTableColumn{} }
func (m *CyTableColumn) String() string            { return proto.CompactTextString(m) }
func (*CyTableColumn) ProtoMessage()               {}
func (*CyTableColumn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CyTableColumn) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CyTableColumn) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CyTableColumn) GetAppliesTo() string {
	if m != nil {
		return m.AppliesTo
	}
	return ""
}

type CySubNetwork struct {
	Id int64 `protobuf:"varint,1,opt,name=id,json=@id" json:"id,omitempty"`
}

func (m *CySubNetwork) Reset()                    { *m = CySubNetwork{} }
func (m *CySubNetwork) String() string            { return proto.CompactTextString(m) }
func (*CySubNetwork) ProtoMessage()               {}
func (*CySubNetwork) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CySubNetwork) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CyView struct {
	Id int64 `protobuf:"varint,1,opt,name=id,json=@id" json:"id,omitempty"`
}

func (m *CyView) Reset()                    { *m = CyView{} }
func (m *CyView) String() string            { return proto.CompactTextString(m) }
func (*CyView) ProtoMessage()               {}
func (*CyView) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CyView) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CyVisualProperty struct {
	ViewId       int64  `protobuf:"varint,1,opt,name=viewId,json=view" json:"viewId,omitempty"`
	PropertiesOf string `protobuf:"bytes,2,opt,name=propertiesOf,json=properties_of" json:"propertiesOf,omitempty"`
	AppliesTo    int64  `protobuf:"varint,3,opt,name=applies_to" json:"applies_to,omitempty"`
}

func (m *CyVisualProperty) Reset()                    { *m = CyVisualProperty{} }
func (m *CyVisualProperty) String() string            { return proto.CompactTextString(m) }
func (*CyVisualProperty) ProtoMessage()               {}
func (*CyVisualProperty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CyVisualProperty) GetViewId() int64 {
	if m != nil {
		return m.ViewId
	}
	return 0
}

func (m *CyVisualProperty) GetPropertiesOf() string {
	if m != nil {
		return m.PropertiesOf
	}
	return ""
}

func (m *CyVisualProperty) GetAppliesTo() int64 {
	if m != nil {
		return m.AppliesTo
	}
	return 0
}

func init() {
	proto.RegisterType((*CX)(nil), "cxpb.CX")
	proto.RegisterType((*Node)(nil), "cxpb.Node")
	proto.RegisterType((*Edge)(nil), "cxpb.Edge")
	proto.RegisterType((*NodeAttribute)(nil), "cxpb.NodeAttribute")
	proto.RegisterType((*EdgeAttribute)(nil), "cxpb.EdgeAttribute")
	proto.RegisterType((*NetworkAttribute)(nil), "cxpb.NetworkAttribute")
	proto.RegisterType((*CartesianLayout)(nil), "cxpb.CartesianLayout")
	proto.RegisterType((*NdexStatus)(nil), "cxpb.NdexStatus")
	proto.RegisterType((*CyHiddenAttribute)(nil), "cxpb.CyHiddenAttribute")
	proto.RegisterType((*CyTableColumn)(nil), "cxpb.CyTableColumn")
	proto.RegisterType((*CySubNetwork)(nil), "cxpb.CySubNetwork")
	proto.RegisterType((*CyView)(nil), "cxpb.CyView")
	proto.RegisterType((*CyVisualProperty)(nil), "cxpb.CyVisualProperty")
}

func init() { proto.RegisterFile("cx.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 780 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x5b, 0x8f, 0x1b, 0x35,
	0x14, 0xd6, 0xcc, 0x24, 0xd9, 0xe4, 0x6c, 0xc2, 0xa6, 0x6e, 0xbb, 0x18, 0xc4, 0x65, 0x35, 0x20,
	0xb4, 0xe2, 0x61, 0x85, 0xe0, 0x05, 0x89, 0x07, 0xa8, 0x02, 0x94, 0x95, 0x50, 0x5b, 0xb9, 0x4b,
	0x05, 0x0f, 0xa8, 0x9a, 0xcb, 0xd9, 0xc5, 0x62, 0xd6, 0x1e, 0xd9, 0x9e, 0x24, 0xf3, 0xa3, 0xf8,
	0x2b, 0xfc, 0xa6, 0xca, 0x9e, 0xfb, 0x4c, 0x5f, 0xf7, 0x2d, 0xfe, 0x2e, 0xe7, 0x9c, 0xb1, 0x3f,
	0x3b, 0xb0, 0x4c, 0x8e, 0x57, 0xb9, 0x92, 0x46, 0x92, 0x59, 0x72, 0xcc, 0xe3, 0xf0, 0xbf, 0x39,
	0xf8, 0xbb, 0x3f, 0xc9, 0x05, 0xcc, 0x85, 0x4c, 0x51, 0x53, 0xef, 0x22, 0xb8, 0x3c, 0xfd, 0x16,
	0xae, 0x2c, 0x79, 0xf5, 0x42, 0xa6, 0xc8, 0x2a, 0xc2, 0x2a, 0x30, 0xbd, 0x43, 0x4d, 0xfd, 0xbe,
	0xe2, 0x97, 0xf4, 0x0e, 0x59, 0x45, 0x90, 0x1f, 0xe0, 0x03, 0xfb, 0xe3, 0x99, 0x31, 0x8a, 0xc7,
	0x85, 0x41, 0x4d, 0x03, 0x27, 0x7d, 0xdc, 0x49, 0x5b, 0x8e, 0x8d, 0xa4, 0xd6, 0x6c, 0xfb, 0xf4,
	0xcc, 0xb3, 0xbe, 0xf9, 0x45, 0x9f, 0x63, 0x23, 0x29, 0xf9, 0x19, 0x1e, 0x09, 0x34, 0x07, 0xa9,
	0xfe, 0xed, 0xf9, 0xe7, 0xce, 0x7f, 0x5e, 0xfb, 0x47, 0x34, 0x9b, 0x1a, 0xc8, 0x33, 0xd8, 0x26,
	0x91, 0x32, 0xa8, 0x79, 0x24, 0x7e, 0x8f, 0x4a, 0x59, 0x18, 0x4d, 0x17, 0xae, 0xc8, 0xd3, 0xaa,
	0xc8, 0x6e, 0xc8, 0xb2, 0x89, 0x9c, 0x7c, 0x03, 0x20, 0x52, 0x3c, 0xbe, 0x36, 0x91, 0x29, 0x34,
	0x3d, 0x71, 0xe6, 0x6d, 0x3d, 0x41, 0x8b, 0xb3, 0x9e, 0x86, 0x3c, 0x07, 0x92, 0x94, 0xbf, 0xf1,
	0x34, 0x45, 0xd1, 0x9b, 0x7d, 0xe9, 0x9c, 0x1f, 0xd6, 0x6d, 0xc7, 0x3c, 0x7b, 0x8f, 0x85, 0x7c,
	0x05, 0x27, 0x49, 0xf9, 0x86, 0xe3, 0x41, 0xd3, 0x95, 0x73, 0xaf, 0x1b, 0xb7, 0x05, 0x59, 0x43,
	0x92, 0xef, 0x61, 0x93, 0x94, 0xaf, 0x8b, 0xb8, 0xde, 0x11, 0x4d, 0xc1, 0xa9, 0x49, 0xa3, 0xee,
	0x28, 0x36, 0x14, 0x92, 0x5f, 0xed, 0xa8, 0x6f, 0xb8, 0x2e, 0xa2, 0xec, 0x95, 0x92, 0x39, 0x2a,
	0xc3, 0x51, 0xd3, 0xd3, 0xfe, 0x36, 0xef, 0x86, 0x7c, 0xc9, 0xde, 0xe3, 0xb0, 0x47, 0x9d, 0x94,
	0x37, 0x51, 0x9c, 0x61, 0x22, 0xb3, 0xe2, 0x5e, 0x68, 0xba, 0xee, 0x1f, 0xf5, 0xae, 0xe2, 0x76,
	0x8e, 0x63, 0x23, 0x69, 0xf8, 0x23, 0xcc, 0x6c, 0x16, 0xc8, 0x19, 0xf8, 0x3c, 0xa5, 0xde, 0x85,
	0x77, 0x19, 0xb0, 0xe0, 0x27, 0x9e, 0x92, 0x33, 0x98, 0x89, 0xe8, 0x1e, 0xa9, 0x7f, 0xe1, 0x5d,
	0xae, 0x98, 0x27, 0xc8, 0x53, 0x00, 0x85, 0xb9, 0x42, 0x8d, 0xc2, 0xd8, 0x28, 0x3a, 0x58, 0x85,
	0x7f, 0xc1, 0xcc, 0x26, 0x71, 0x5a, 0xe0, 0x31, 0x2c, 0xb5, 0x2c, 0x54, 0x82, 0xd7, 0xa9, 0x2b,
	0x12, 0x30, 0x4f, 0x5b, 0xd0, 0x44, 0xea, 0x0e, 0xcd, 0x75, 0xea, 0x4a, 0x04, 0xcc, 0x33, 0xe4,
	0x1c, 0x4e, 0xb9, 0x30, 0xa8, 0xa2, 0xc4, 0x70, 0x29, 0xe8, 0xac, 0x2a, 0xcd, 0xc3, 0x0c, 0x36,
	0x83, 0x9c, 0x12, 0x02, 0x0b, 0x9b, 0xd4, 0xeb, 0xa6, 0x8f, 0x9f, 0xcb, 0xe9, 0x9c, 0x5b, 0x98,
	0xef, 0xa3, 0xac, 0xc0, 0x66, 0xc4, 0xbd, 0x95, 0x98, 0x32, 0xc7, 0xa6, 0x70, 0x35, 0x5a, 0x11,
	0x0b, 0x37, 0xc5, 0xbc, 0x1e, 0xcd, 0x76, 0x1b, 0x5c, 0x29, 0xdb, 0xcd, 0x5e, 0xaa, 0x87, 0xe9,
	0x26, 0x61, 0x3b, 0xbe, 0x43, 0x0f, 0xdb, 0xf0, 0x6f, 0x38, 0x1b, 0xdd, 0x37, 0x72, 0x5e, 0x6d,
	0x67, 0x7b, 0x6c, 0xf5, 0x8a, 0xac, 0xc1, 0x3b, 0xba, 0x86, 0x1e, 0xf3, 0x8e, 0x76, 0x55, 0xba,
	0x66, 0x1e, 0xf3, 0x4a, 0xeb, 0xd9, 0x73, 0x3c, 0xf0, 0xd4, 0xb5, 0x0b, 0x58, 0xbd, 0x0a, 0xff,
	0xf7, 0x01, 0xba, 0x2b, 0x49, 0x3e, 0x03, 0xc0, 0xa3, 0x41, 0x25, 0xa2, 0xac, 0xfe, 0x9c, 0x15,
	0xeb, 0x21, 0x24, 0x84, 0x75, 0xa2, 0x30, 0xb2, 0xe7, 0x7d, 0xc3, 0xeb, 0xcf, 0x0b, 0xd8, 0x00,
	0x23, 0x5f, 0xc3, 0xf6, 0x5e, 0xa6, 0xfc, 0x96, 0x27, 0x9d, 0xae, 0xca, 0xcc, 0x04, 0xb7, 0xfd,
	0xf6, 0x5c, 0xf3, 0x98, 0x67, 0xdc, 0x94, 0xf5, 0x4e, 0xf4, 0x10, 0xf2, 0x09, 0xac, 0xf2, 0x22,
	0xce, 0xb8, 0xfe, 0x07, 0xab, 0x3d, 0x59, 0xb2, 0x0e, 0xb0, 0xac, 0xfd, 0xf4, 0x9d, 0x2c, 0x84,
	0xa1, 0x0b, 0xd7, 0xa2, 0x03, 0x2c, 0x6b, 0x8f, 0xa5, 0x62, 0x4f, 0x2a, 0xb6, 0x05, 0xc8, 0x13,
	0x98, 0xcb, 0x83, 0x40, 0x45, 0x97, 0xae, 0x69, 0xb5, 0x20, 0x5f, 0xc2, 0xc6, 0x3d, 0x4a, 0xa8,
	0xf6, 0xa8, 0xfe, 0x60, 0xd7, 0x74, 0xe5, 0xd8, 0x21, 0x48, 0x3e, 0x86, 0xa5, 0xc2, 0x28, 0x7d,
	0x29, 0xb2, 0x92, 0x82, 0x1b, 0xaa, 0x5d, 0x87, 0xcf, 0xe1, 0xd1, 0xe4, 0xa1, 0x6a, 0xd3, 0xe0,
	0x4d, 0xd2, 0xe0, 0x8f, 0xd3, 0x50, 0xc7, 0x23, 0x0d, 0x5f, 0xc1, 0x66, 0xf0, 0x04, 0x4c, 0x8b,
	0x34, 0x16, 0xbf, 0x09, 0xd0, 0xa7, 0xb0, 0x8a, 0xf2, 0x3c, 0xe3, 0xa8, 0x6f, 0x64, 0x5d, 0x08,
	0x6a, 0xe0, 0xad, 0x91, 0xe1, 0xe7, 0xb0, 0xee, 0xbf, 0x6b, 0x93, 0xab, 0x1f, 0x7e, 0x04, 0x8b,
	0xea, 0x99, 0x9c, 0x52, 0xf7, 0xb0, 0x1d, 0x3f, 0x6a, 0xe4, 0x49, 0x95, 0xa9, 0x36, 0xf7, 0x33,
	0xbb, 0x22, 0x5f, 0xc0, 0x3a, 0x6f, 0x1f, 0xb9, 0x97, 0xb7, 0xf5, 0x74, 0x9b, 0x0e, 0x7b, 0x2b,
	0x6f, 0xed, 0xb9, 0x77, 0x83, 0xd5, 0xe9, 0xe8, 0x21, 0xf1, 0xc2, 0xfd, 0x37, 0x7f, 0xf7, 0x2e,
	0x00, 0x00, 0xff, 0xff, 0x5f, 0x58, 0x58, 0x74, 0xa7, 0x07, 0x00, 0x00,
}
